version: "3"
services:

  prometheus:
    image: prom/prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - "./config:/config"
      - "prometheus_data:/data"
    privileged: true
    command: -config.file=/config/prometheus/prometheus.yml -storage.local.path=/data -storage.local.retention=100h -alertmanager.url=http://alertmanager:9093
    
  alertmanager:
    image: prom/alertmanager
    ports:
      - "9093:9093"
    volumes:
      - ./config:/config
      - "alertmanager_data:/data"
    restart: always
    command: -config.file=/config/alertmanager/alertmanager.yml -storage.path=/data

  blackbox_exporter:
    image: prom/blackbox-exporter
    ports:
      - "9115:9115"
    restart: always
    volumes:
      - "./config:/config"
    command: --config.file=/config/blackbox/blackbox.yml

  cadvisor:
    image: google/cadvisor
    ports:
      - "8080:8080"
    restart: always
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
      - "/cgroup:/cgroup:ro"
    privileged: true # Enable privileged mode to bypass permissions rights for RHEL docker hosts

  node_exporter:
    image: prom/node-exporter
    ports:
      - "9100:9100"
    restart: always
    volumes:
      - "/proc:/host/proc:ro"
      - "/sys:/host/sys:ro"
      - "/:/rootfs:ro"
    privileged: true # Enable privileged mode to bypass permissions rights for RHEL docker hosts

  grafana:
    image: grafana/grafana
    volumes:
      - "grafana_data:/var/lib/grafana"
    env_file:
      - ./config/docker/environments.env
    restart: unless-stopped
    ports:
      - "3000:3000"


# Create these volumes if you want to store data in volumes instead of mounting the data onto a directory
volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:



